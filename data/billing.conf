#!/usr/bin/python
{
	# Logger configuration
	"logging": {
		# Logging type. Possible options is 'syslog' or 'file'.
		"type": "syslog",

		# Logging level
		"level": "error",

		###
		### file-specific options
		###
		# Logfiles location
		"logdir": "/var/log",

		# When the log size is about to be exceeded, the file is closed and a new file is
		# silently opened for output. Rollover occurs whenever the current log file is
		# nearly 'logsize' in length; if 'logsize' is zero, rollover never occurs
		"logsize": "20Mb",

		# If 'backcount' is non-zero, the system will save old log files by
		# appending the extensions ".1", ".2" etc., to the filename. 
		"backcount": 3,

		###
		### syslog-specific options
		###
		# syslog's location
		"address": "/dev/log",

		# The facility specifies the subsystem that produced the message.
		"facility": "daemon"
	},

	# Billing server configuration
	"server": {
		"pidfile": "/var/run/billing/bc-server.pid",
		"workers": 10
	},

	# Data router configuration
	# Service to redirect data from source databases to destination servers.
	"router": {
		"pidfile": "/var/run/billing/bc-router.pid",
		"source":      { "table": "bills",         "list": "@=database.shards" },
		"destination": { "table": "customerbills", "list": "@=zones" },

		# Run pusher process (configuration replicator).
		"pusher": {
			# Synchronize tables
			"tables": [ 'customers', 'metrics', 'rates', 'tariffs' ],

			# Polling period
			"period": 15
		},

		# Run withdraw process
		"withdraw": true
	},

	# Zones configuration
	"zone": {
		"DC1": { "server": "dc1.domain.com", "weight": 3, "local": true,
		         "auth": { "role": "admin", "secret": "qwerty" }
		       },
		"DC2": { "server": "dc2.domain.com", "weight": 3, "local": false,
		         "auth": { "role": "admin", "secret": "qwerty" }
		       },
	},

	# Database section
	"database": {
		# Database name, user, password
		"name": "billing",
		"user": "bc",
		"pass": "qwerty",

		# Database searver for global collections
		"server": "127.0.0.1",

		# Database servers for sharding
		"shards": {
			"shard0": { "server": "127.0.0.10", "weight": 3, "local": true  },
			"shard1": { "server": "127.0.0.11", "weight": 3, "local": false },
			"shard2": { "server": "127.0.0.12", "weight": 3, "local": false }
		}
	}
}
