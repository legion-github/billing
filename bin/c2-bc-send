#!/usr/bin/env python2.6

import sys, time, json, pprint, threading
from bc import sockets

ans_done = threading.Lock()

def on_add(addr, conn):
	print "Connect to", addr
	conn.send({'type': 'status', 'value': 'this-is-me'})
	ans_done.acquire()


def on_remove(addr, conn):
	print "Goodby", addr

def on_error(msg):
	pass

def on_message(addr, conn, msg):
	pprint.pprint(msg)
	ans_done.release()


try:
	c = sockets.Client()
	c.set_handlers({
		'on_connect':    on_add,
		'on_disconnect': on_remove,
		'on_recv':       on_message,
		'on_err':	 on_error
	})
	c.start(timeout=1)

	#data = json.loads(str(sys.argv[1]))
	data = {
			'type': 'stat',
	}
	c.send(data)

	ans_done.acquire()
	c.close()
	time.sleep(1)
except:
	pass
